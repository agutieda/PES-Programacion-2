---
title: "Figuras en R"
subtitle: "Distribuciones"
author: "Ángelo Gutiérrez Daza"
date: "2025-10-03"
format: 
  revealjs:
    theme: dark
    smaller: true
    scrollable: true
    slide-number: true
    chalkboard: true
    preview-links: auto
    logo: "./input/Logo-Banco-de-Guatemala.png"
    footer: "Programación II - Banco de Guatemala"
---

## Inicialización y Librerías

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
```

```{r libraries}
# Librerías usadas
library(dplyr)
library(readr)
library(lubridate)
library(ggplot2)
library(tidyr)
library(stringr)
library(readxl)
library(magrittr)

# Limpiar entorno de trabajo
graphics.off()
rm(list = ls())
cat("\014")
```

---

## Carga de Datos

```{r load-data}
# Comenzemos por cargar el CSV con la muestra seleccionada
ipc_data <- read_csv("./output/selected_data.csv")

# Mostrar primeras filas
head(ipc_data)
```

---

## Construcción de Índices de Inflación Anual

```{r inflation-calculation}
# Para cada item y fecha, vamos a calcular la inflación anual
ipc_data %<>%
    group_by(id_item) %>%
    arrange(t_date) %>%
    mutate(
        ipc_lag12 = lag(ipc, n = 12, order_by = t_date),
        inf12m = (ipc / ipc_lag12 - 1) * 100
    ) %>%
    ungroup()

# Eliminar valores NA de los primeros 12 meses
ipc_data %<>% filter(!is.na(inf12m))

# Mostrar resultado
head(ipc_data %>% select(t_date, id_item, descr, ipc, inf12m))
```

---

## Preparación de Datos para Distribuciones

```{r distribution-data-prep}
# Enfoquémonos en la inflación de los items en diciembre de cada año
inf12m_plot <- ipc_data %>%
    filter(id_nivel == "Item", month(t_date) == 12) %>%
    mutate(t_year = year(t_date)) %>%
    select(t_year, id_item, inf12m)

# Mostrar resumen de datos
cat("Años disponibles:", paste(sort(unique(inf12m_plot$t_year)), collapse = ", "))
cat("\nNúmero de items por año:", table(inf12m_plot$t_year))
```

---

## Histograma Simple: Código

```{r simple-hist-code, eval=FALSE}
# Histograma básico de la distribución en 2019
hist_simple <- inf12m_plot %>%
    filter(t_year == 2019) %>%
    ggplot() +
    geom_histogram(aes(x = inf12m), bins = 20, 
                   fill = "lightblue", color = "darkblue")

hist_simple
```

---

## Histograma Simple: Resultado

```{r simple-hist-output, echo=FALSE}
# Histograma básico de la distribución en 2019
hist_simple <- inf12m_plot %>%
    filter(t_year == 2019) %>%
    ggplot() +
    geom_histogram(aes(x = inf12m), bins = 20, 
                   fill = "lightblue", color = "darkblue")

hist_simple
```

---

## Histograma Mejorado: Código

```{r fancy-hist-code, eval=FALSE}
# Histograma con mejoras estéticas y límites
min_x <- -15
max_x <- 15

hist_fancy <- inf12m_plot %>%
    filter(t_year == 2019) %>%
    mutate(inf12m = if_else(inf12m < min_x, min_x, inf12m)) %>%
    mutate(inf12m = if_else(inf12m > max_x, max_x, inf12m)) %>%
    ggplot() +
    geom_histogram(aes(x = inf12m), bins = 20, 
                   fill = "lightblue", color = "darkblue") +
    labs(title = "Distribución de la inflación anual de los items del IPC en 2019",
         x = "Inflación Anual (%)", y = "Frecuencia") +
    xlim(min_x - 1, max_x + 1) +
    theme_classic()
```

---

## Histograma Mejorado: Resultado

```{r fancy-hist-output, echo=FALSE}
# Histograma con mejoras estéticas y límites
min_x <- -15
max_x <- 15

hist_fancy <- inf12m_plot %>%
    filter(t_year == 2019) %>%
    mutate(inf12m = if_else(inf12m < min_x, min_x, inf12m)) %>%
    mutate(inf12m = if_else(inf12m > max_x, max_x, inf12m)) %>%
    ggplot() +
    geom_histogram(aes(x = inf12m), bins = 20, 
                   fill = "lightblue", color = "darkblue") +
    labs(title = "Distribución de la inflación anual de los items del IPC en 2019",
         x = "Inflación Anual (%)", y = "Frecuencia") +
    xlim(min_x - 1, max_x + 1) +
    theme_classic()

hist_fancy
```

---

## Histograma Comparativo: Código

```{r comparative-hist-code, eval=FALSE}
# Histograma comparando dos años (2019 vs 2023)
min_x <- -15; max_x <- 15

hist_propio <- inf12m_plot %>%
    filter(t_year %in% c(2019, 2023)) %>%
    mutate(inf12m = if_else(inf12m < min_x, min_x, inf12m),
           inf12m = if_else(inf12m > max_x, max_x, inf12m)) %>%
    ggplot() +
    geom_histogram(aes(x = inf12m, y = after_stat(density), 
                       fill = factor(t_year)),
                   bins = 40, color = "darkblue", 
                   position = "identity", alpha = 0.4) +
    scale_fill_manual(name = "Año",
                      values = c("2019" = "cadetblue", "2023" = "darkorange")) +
    labs(title = "Distribución de la inflación anual de los items del IPC en 2019 y 2023",
         x = "Inflación Anual (%)", y = "Frecuencia (%)") +
    xlim(min_x - 1, max_x + 1) + 
    theme_linedraw()
```

---

## Histograma Comparativo: Resultado

```{r comparative-hist-output, echo=FALSE}
# Histograma comparando dos años (2019 vs 2023)
min_x <- -15; max_x <- 15

hist_propio <- inf12m_plot %>%
    filter(t_year %in% c(2019, 2023)) %>%
    mutate(inf12m = if_else(inf12m < min_x, min_x, inf12m),
           inf12m = if_else(inf12m > max_x, max_x, inf12m)) %>%
    ggplot() +
    geom_histogram(aes(x = inf12m, y = after_stat(density), 
                       fill = factor(t_year)),
                   bins = 40, color = "darkblue", 
                   position = "identity", alpha = 0.4) +
    scale_fill_manual(name = "Año",
                      values = c("2019" = "cadetblue", "2023" = "darkorange")) +
    labs(title = "Distribución de la inflación anual de los items del IPC en 2019 y 2023",
         x = "Inflación Anual (%)", y = "Frecuencia (%)") +
    xlim(min_x - 1, max_x + 1) + 
    theme_linedraw()

hist_propio
```

---

## Gráfico de Densidad: Código

```{r density-code, eval=FALSE}
# Densidades kernel para comparar distribuciones
min_x <- -15; max_x <- 15

density <- inf12m_plot %>%
    filter(t_year %in% c(2019, 2023)) %>%
    mutate(inf12m = if_else(inf12m < min_x, min_x, inf12m),
           inf12m = if_else(inf12m > max_x, max_x, inf12m)) %>%
    ggplot() +
    geom_density(aes(x = inf12m, color = factor(t_year), 
                     fill = factor(t_year)),
                 linewidth = 1.2, alpha = 0.4) +
    scale_fill_manual(name = "Año",
                      values = c("2019" = "cadetblue", "2023" = "darkorange")) +
    scale_color_manual(name = "Año",
                       values = c("2019" = "cadetblue", "2023" = "darkorange")) +
    labs(title = "Distribución de la inflación anual de los items del IPC en 2019 y 2023",
         x = "Inflación Anual (%)", y = "Densidad") +
    xlim(min_x - 1, max_x + 1) + 
    theme_linedraw()
```

---

## Gráfico de Densidad: Resultado

```{r density-output, echo=FALSE}
# Densidades kernel para comparar distribuciones
min_x <- -15; max_x <- 15

density <- inf12m_plot %>%
    filter(t_year %in% c(2019, 2023)) %>%
    mutate(inf12m = if_else(inf12m < min_x, min_x, inf12m),
           inf12m = if_else(inf12m > max_x, max_x, inf12m)) %>%
    ggplot() +
    geom_density(aes(x = inf12m, color = factor(t_year), 
                     fill = factor(t_year)),
                 linewidth = 1.2, alpha = 0.4) +
    scale_fill_manual(name = "Año",
                      values = c("2019" = "cadetblue", "2023" = "darkorange")) +
    scale_color_manual(name = "Año",
                       values = c("2019" = "cadetblue", "2023" = "darkorange")) +
    labs(title = "Distribución de la inflación anual de los items del IPC en 2019 y 2023",
         x = "Inflación Anual (%)", y = "Densidad") +
    xlim(min_x - 1, max_x + 1) + 
    theme_linedraw()

density
```

---

## Histograma + Densidad: Código

```{r combined-code, eval=FALSE}
# Combinando histograma y densidad
min_x <- -15; max_x <- 15

hist_denso <- inf12m_plot %>%
    filter(t_year %in% c(2019, 2023)) %>%
    mutate(inf12m = if_else(inf12m < min_x, min_x, inf12m),
           inf12m = if_else(inf12m > max_x, max_x, inf12m)) %>%
    ggplot() +
    geom_histogram(aes(x = inf12m, y = after_stat(density), 
                       fill = factor(t_year)),
                   bins = 40, color = "darkblue", position = "identity", 
                   alpha = 0.4, linewidth = 0.1) +
    geom_density(aes(x = inf12m, color = factor(t_year), 
                     fill = factor(t_year)),
                 linewidth = 1.2, alpha = 0) +
    scale_fill_manual(name = "Año",
                      values = c("2019" = "cadetblue", "2023" = "darkorange")) +
    scale_color_manual(name = "Año",
                       values = c("2019" = "cadetblue", "2023" = "darkorange")) +
    labs(title = "Distribución de la inflación anual de los items del IPC en 2019 y 2023",
         x = "Inflación Anual (%)", y = "Densidad") +
    xlim(min_x - 1, max_x + 1) + 
    theme_linedraw()
```

---

## Histograma + Densidad: Resultado

```{r combined-output, echo=FALSE}
#, fig.width=10, fig.height=6
# Combinando histograma y densidad
min_x <- -15; max_x <- 15

hist_denso <- inf12m_plot %>%
    filter(t_year %in% c(2019, 2023)) %>%
    mutate(inf12m = if_else(inf12m < min_x, min_x, inf12m),
           inf12m = if_else(inf12m > max_x, max_x, inf12m)) %>%
    ggplot() +
    geom_histogram(aes(x = inf12m, y = after_stat(density), 
                       fill = factor(t_year)),
                   bins = 40, color = "darkblue", position = "identity", 
                   alpha = 0.4, linewidth = 0.1) +
    geom_density(aes(x = inf12m, color = factor(t_year), 
                     fill = factor(t_year)),
                 linewidth = 1.2, alpha = 0) +
    scale_fill_manual(name = "Año",
                      values = c("2019" = "cadetblue", "2023" = "darkorange")) +
    scale_color_manual(name = "Año",
                       values = c("2019" = "cadetblue", "2023" = "darkorange")) +
    labs(title = "Distribución de la inflación anual de los items del IPC en 2019 y 2023",
         x = "Inflación Anual (%)", y = "Densidad") +
    xlim(min_x - 1, max_x + 1) + 
    theme_dark()

hist_denso
```

---

## Guardar Gráficos

```{r save-plots}
# Guardar todos los gráficos generados
ggsave(file = "./output/histogram_simple.pdf", plot = hist_simple)
ggsave(file = "./output/histogram_fancy.pdf", plot = hist_fancy)
ggsave(file = "./output/histogram_propio.pdf", plot = hist_propio)
ggsave(file = "./output/denisity_simple.pdf", plot = density)
ggsave(file = "./output/denisity_fancy.pdf", plot = hist_denso)

cat("Gráficos guardados exitosamente en la carpeta ./output/")
```

